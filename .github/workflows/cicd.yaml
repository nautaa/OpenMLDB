name: cicd

on:
  push:
    branches:
      - main
      - test/*
    tags:
      - v*
  pull_request:
  workflow_dispatch:

env:
  GIT_SUBMODULE_STRATEGY: recursive

jobs:
  build_and_cpp_ut:
    runs-on: self-hosted
    container:
      image: ghcr.io/4paradigm/hybridsql:0.4.0
    env:
      OS: linux
    steps:
      - uses: actions/checkout@v2
      - name: setup thirdparty
        run: |
          make thirdparty

      - name: build
        run: |
          make build SQL_PYSDK_ENABLE=ON SQL_JAVASDK_ENABLE=ON TESTING_ENABLE=ON
          # GitHub runner disk space is limited
          # delete thirdparty build directory($ROOT/.deps/) to save disk space
          make thirdpartybuild-clean

      - name: pack OpenMLDB
        if: ${{ github.event_name == 'push' }}
        run: |
          VERSION="snapshot"
          if [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            VERSION=$(echo $VERSION | sed -e 's/^v//')
          fi
          bash steps/package_openmldb.sh $VERSION ${{ env.OS }}

      - name: upload artifacts
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          path: openmldb-*.tar.gz
          name: release-artifacts

      - name: run cpp
        run: |
          bash steps/ut.sh

      - name: sdk test
        run: |
          make sdktest

      - name: cluster test
        run: |
          make clustertest

      - name: build jsdk and package
        run: |
          make javasdk

      - name: run java modules smoke test
        run: |
          sh steps/ut_zookeeper.sh start
          cd onebox && sh start_onebox.sh && cd - || exit
          cd java
          mvn test
          cd -
          cd onebox && sh stop_all.sh && cd - || exit
          sh steps/ut_zookeeper.sh stop

      - name: build pysdk and sqlalchemy
        run: |
          make pythonsdk
      - name: test sqlalchemy
        run: |
          python3 -m easy_install nose pip
          yum install -y net-tools
          bash steps/fesql_test_python.sh


  sql_sdk_test:
    runs-on: self-hosted
    container:
      image: ghcr.io/4paradigm/hybridsql:0.4.0
    steps:
      - uses: actions/checkout@v2

      - name: run sql_sdk_test
        run: |
          make sdktest SQL_PYSDK_ENABLE=OFF SQL_JAVASDK_ENABLE=OFF TESTING_ENABLE=ON

      - name: upload unit test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: linux-ut-result-cpp-sdk-${{ github.sha }}
          path: |
            reports/*.xml
